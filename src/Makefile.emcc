SRCS =	calc.c doscall.c exec.c getini.c iocscall.c key.c \
	line0.c line2.c line4.c line5.c \
	line6.c line7.c line8.c line9.c lineb.c linec.c \
	lined.c linee.c linef.c \
	load.c mem.c run68.c debugger.c eaaccess.c disassemble.c \
	conditions.c ansicolor-w32.c

OBJS =	calc.o doscall.o exec.o getini.o iocscall.o key.o \
	line0.o line2.o line4.o line5.o \
	line6.o line7.o line8.o line9.o lineb.o linec.o \
	lined.o linee.o linef.o \
	load.o mem.o run68.o debugger.o eaaccess.o disassemble.o \
	conditions.o ansicolor-w32.o

CC = emcc

LDFLAGS =
DEFS = -DFNC_TRACE -DENV_FROM_INI
CFLAGS = -g $(DEFS)
RELEASE_DIR = ../Release
ARCHIVE_DIR = ../archives
.c.o: $(CC) $(CFLAGS) $<

all: run68
clean:
	rm -f *.o run68
archive:
	tar cvfz $(ARCHIVE_DIR)/run68src`date +%G%m%d-%0k`.tar.gz *.c *.h Makefile *.txt *.ini

release:
	tar cvfz $(RELEASE_DIR)/run68src`date +%G%m%d`.tar.gz *.c *.h Makefile *.txt *.ini
	cp *.ini $(RELEASE_DIR); cp *.txt $(RELEASE_DIR)

run68: $(OBJS)
	emcc -o run68.js $(OBJS) $(LDFLAGS) && echo "*** doscall.c is not implemented yet. this binary should be still useless ***"

$(OBJS): run68.h
